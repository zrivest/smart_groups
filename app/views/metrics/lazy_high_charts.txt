 @chart = LazyHighCharts::HighChart.new('graph') do |f|
      f.title({ :text=>@course.name})
      f.series(:type=> "column",:name=> "Test",:data=> [1,5,9,10,3,5])
      f.options[:xAxis][:categories] = ["Mary","Peter","Paul","Steve"]
       # f.labels(:items=>[:html=>"Total fruit consumption", :style=>{:left=>"40px", :top=>"8px", :color=>"black"} ])
      # p @categories
    end
    render :show
  end





___________

@categories = Array.new
    @chart = LazyHighCharts::HighChart.new('graph') do |f|
      f.title({ :text=>@course.name})
      @completed_assignments.each do |student_assignment|
        @categories << student_assignment.assignment.assignment_name
        grades = student_assignment.student.get_grades
          p grades
        f.series(:type=> "column",:name=> student_assignment.student.first_name,:data=> [grades])
      end
      f.options[:xAxis][:categories] = @categories
       # f.labels(:items=>[:html=>"Total fruit consumption", :style=>{:left=>"40px", :top=>"8px", :color=>"black"} ])
      # p @categories
    end
    render :show
  end
end
----
   @completed_assignments = @course.all_completed_assignments_for_course
    @chart = LazyHighCharts::HighChart.new('graph') do |f|
        f.options[:xAxis][:categories] = ['Steve', 'Mary', 'Mark', 'Leslie', 'Maya']
        f.labels(:items=>[:html=>"Total fruit consumption", :style=>{:left=>"40px", :top=>"8px", :color=>"black"} ])
        f.series(:type=>"column", :name=> "hello", :data=> [4, 3, 3, 9, 0])

this works but what the fuck?? just because I'm iterrating?
        ---

class MetricsController < ApplicationController

  def main
    @course = Course.find(params[:course_id])


    session[:course_id] = @course.id


    @chart_types = [{id: 1, type: "column"}, {id: 2, type: "combo"}, {id: 3, type: "basic line"}]

  end

  def create
    @selections = params["chart_selections"]
    @course = Course.find(session[:course_id])

    @graph = Graph.create(course_id: session[:course_id])
    @completed_assignments = @course.all_completed_assignments_for_course

    # @chart = LazyHighCharts::HighChart.new('column') do |f|
      # f.title({ text: "#{@course.name}"})
    #   f.options[:chart][:defaultSeriesType] = "column"
    #   f.plot_options({:column=>{:stacking=>"percent"}})
    #   @completed_assignments.each do|student_assignment|
    #     grades = student_assignment.student.get_grades
    #     @full_name = student_assignment.student.name
    #     @graph.plots << Plot.create(data: grades)
    #     f.series(name: student_assignment.student.name, data: grades)
    #   end
    # end
    # render :show

    @categories = Array.new
    @chart = LazyHighCharts::HighChart.new('graph') do |f|
      # f.title({ :text=>@course.name})
      @completed_assignments.each do |student_assignment|
        @categories << student_assignment.assignment.assignment_name
        grades = student_assignment.student.get_grades
      f.series(:type=> "column",:name=> student_assignment.student.first_name,:data=> grades)
      end
      f.options[:xAxis][:categories] = @categories
    end
    render :show
  end
end



@chart = LazyHighCharts::HighChart.new('graph') do |f|
  @students.each do |student_assignenment|
      # f.title({ :text=>@course.name})
        f.series(data: student_assignment.assigment.grade )
end
end

class MetricsController < ApplicationController

  def main
    @course = Course.find(params[:course_id])


    session[:course_id] = @course.id


    @chart_types = [{id: 1, type: "column"}, {id: 2, type: "combo"}, {id: 3, type: "basic line"}]

  end

  def create
    @selections = params["chart_selections"]
    @course = Course.find(session[:course_id])

    @graph = Graph.create(course_id: session[:course_id])
    # @completed_assignments = @course.all_completed_assignments_for_course

    # @chart = LazyHighCharts::HighChart.new('column') do |f|
    #   f.title({ text: "#{@course.name}"})
    #   f.options[:chart][:defaultSeriesType] = "column"
    #   f.plot_options({:column=>{:stacking=>"percent"}})
    #   @completed_assignments.each do |student_assignment|
    #     grades = student_assignment.student.get_grades
    #     @full_name = student_assignment.student.name
    #     @graph.plots << Plot.create(data: grades)
    #     f.series(name: student_assignment.student.name, data: grades)
    #   end
    # end
    # render :show

    @chart = LazyHighCharts::HighChart.new('graph') do |f|
  f.title({ :text=>"Combination chart"})
  f.options[:xAxis][:categories] = ['Apples', 'Oranges', 'Pears', 'Bananas', 'Plums']
  f.labels(:items=>[:html=>"Total fruit consumption", :style=>{:left=>"40px", :top=>"8px", :color=>"black"} ])
  f.series(:type=> 'column',:name=> 'Jane',:data=> [3, 2, 1, 3, 4])
  f.series(:type=> 'column',:name=> 'John',:data=> [2, 3, 5, 7, 6])
  f.series(:type=> 'column', :name=> 'Joe',:data=> [4, 3, 3, 9, 0])
  f.series(:type=> 'column', :name=> 'Joe',:data=> [4, 3, 3, 9, 0])
  f.series(:type=> 'spline',:name=> 'Average', :data=> [3, 2.67, 3, 6.33, 3.33])
  f.series(:type=> 'pie',:name=> 'Total consumption',
  :data=> [
    {:name=> 'Jane', :y=> 13, :color=> 'red'},
    {:name=> 'John', :y=> 23,:color=> 'green'},
    {:name=> 'Joe', :y=> 19,:color=> 'blue'}
  ],
  :center=> [100, 80], :size=> 100, :showInLegend=> false)
 end

 render :show
  end
end

------------

<script type="text/javascript" charset="utf-8">
// $(function () {
//         $('#orders_chart').highcharts({
//             chart: {
//             },
//             title: {
//                 text: 'Combination chart'
//             },
//             xAxis: {
//                 categories: ['Apples', 'Oranges', 'Pears', 'Bananas', 'Plums']
//             },
//             tooltip: {
//                 formatter: function() {
//                     var s;
//                     if (this.point.name) { // the pie chart
//                         s = ''+
//                             this.point.name +': '+ this.y +' fruits';
//                     } else {
//                         s = ''+
//                             this.x  +': '+ this.y;
//                     }
//                     return s;
//                 }
//             },
//             labels: {
//                 items: [{
//                     html: 'Total fruit consumption',
//                     style: {
//                         left: '40px',
//                         top: '8px',
//                         color: 'black'
//                     }
//                 }]
//             },
//             series: [{
//                 type: 'column',
//                 name: 'Jane',
//                 data: [3, 2, 1, 3, 4]
//             }, {
//                 type: 'column',
//                 name: 'John',
//                 data: [2, 3, 5, 7, 6]
//             }, {
//                 type: 'column',
//                 name: 'Joe',
//                 data: [4, 3, 3, 9, 0]
//             }, {
//                 type: 'spline',
//                 name: 'Average',
//                 data: [3, 2.67, 3, 6.33, 3.33],
//                 marker: {
//                   lineWidth: 2,
//                   lineColor: Highcharts.getOptions().colors[3],
//                   fillColor: 'white'
//                 }
//             }, {
//                 type: 'pie',
//                 name: 'Total consumption',
//                 data: [{
//                     name: 'Jane',
//                     y: 13,
//                     color: Highcharts.getOptions().colors[0] // Jane's color
//                 }, {
//                     name: 'John',
//                     y: 23,
//                     color: Highcharts.getOptions().colors[1] // John's color
//                 }, {
//                     name: 'Joe',
//                     y: 19,
//                     color: Highcharts.getOptions().colors[2] // Joe's color
//                 }],
//                 center: [100, 80],
//                 size: 100,
//                 showInLegend: false,
//                 dataLabels: {
//                     enabled: false
//                 }
//             }]
//         });
//     });
</script>
